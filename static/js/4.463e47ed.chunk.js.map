{"version":3,"sources":["img/leo.png","components/Users/Users.module.css","components/Common/Paginator.module.css","components/Common/Paginator.js","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","onPageChanged","currentPage","totalUsersCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","styles","paginator","onClick","filter","p","map","e","pageNumber","selectedPage","Users","props","users","u","to","id","src","photos","small","ava","userPhoto","name","followed","disabled","followersInProgress","some","unfollow","follow","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowersInProgress","UsersContainer","setCurrentPage","requestUsers","this","Preloader","React","Component","mapStateToProps","withAuthRedirect","connect","toggleFollowingProgress","compose"],"mappings":"4GAAe,QAA0B,iC,oBCCzCA,EAAOC,QAAU,CAAC,UAAY,2B,oBCA9BD,EAAOC,QAAU,CAAC,aAAe,gCAAgC,UAAY,6BAA6B,WAAa,gC,uNCE1GC,EAAY,SAAC,GAIxB,IAJyG,IAA/EC,EAA8E,EAA9EA,cAAeC,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,SAAiC,IAAvBC,mBAAuB,MAAT,GAAS,EACpGC,EAAaC,KAAKC,KAAKL,EAAkBC,GAEzCK,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC/BD,EAAME,KAAKD,GAGb,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GAE1C,EAAwCQ,mBAAS,GAAjD,mBAAKC,EAAL,KAAoBC,EAApB,KACIC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAI7C,OACE,sBAAKa,UAAWC,IAAOC,UAAvB,UACGN,EAAgB,GAAK,wBAAQO,QAAS,WAAQN,EAAiBD,EAAgB,IAA1D,kBACrBL,EACEa,QAAO,SAAAC,GAAC,OAAIA,GAAKP,GAAyBO,GAAKN,KAC/CO,KAAI,SAAAD,GACH,OAAO,sBAAMF,QAAS,SAACI,GAAQxB,EAAcsB,IAAML,UAAWhB,IAAgBqB,EAAIJ,IAAOO,WAAa,IAAMP,IAAOQ,aAAeR,IAAOO,WAAlI,SAA+IH,OAEzJX,EAAeE,GAAiB,wBAAQO,QAAS,WAAQN,EAAiBD,EAAgB,IAA1D,sBCnB5Bc,EAAQ,SAACC,GAElB,OAAO,gCACL,cAAC,EAAD,CAAW5B,cAAe4B,EAAM5B,cAAeC,YAAa2B,EAAM3B,YAAaC,gBAAiB0B,EAAM1B,gBAAiBC,SAAUyB,EAAMzB,WACtIyB,EAAMC,MAAMN,KAAI,SAAAO,GACf,OACE,8BACE,iCACE,cAAC,IAAD,CAASC,GAAI,YAAcD,EAAEE,GAA7B,SACE,8BACE,qBAAKC,IAAuB,MAAlBH,EAAEI,OAAOC,MAAgBL,EAAEI,OAAOC,MAAQC,IAAKnB,UAAWC,IAAOmB,gBAG/E,8BACGP,EAAEQ,OAEL,8BACGR,EAAES,SACD,wBAAQC,SAAUZ,EAAMa,oBAAoBC,MAAK,SAAAV,GAAE,OAAIA,IAAOF,EAAEE,MAAKZ,QAAS,WAC5EQ,EAAMe,SAASb,EAAEE,KADnB,sBAIA,wBAAQQ,SAAUZ,EAAMa,oBAAoBC,MAAK,SAAAV,GAAE,OAAIA,IAAOF,EAAEE,MAAKZ,QAAS,WAC5EQ,EAAMgB,OAAOd,EAAEE,KADjB,0BAhBEF,EAAEE,WCZPa,EAAW,SAACC,GACvB,OAAOA,EAAMC,UAAUlB,OAGZmB,EAAc,SAACF,GAC1B,OAAOA,EAAMC,UAAU5C,UAGZ8C,EAAqB,SAACH,GACjC,OAAOA,EAAMC,UAAU7C,iBAGZgD,EAAiB,SAACJ,GAC7B,OAAOA,EAAMC,UAAU9C,aAGZkD,EAAgB,SAACL,GAC5B,OAAOA,EAAMC,UAAUK,YAGZC,EAAyB,SAACP,GACrC,OAAOA,EAAMC,UAAUN,qBCVnBa,E,4MAMJtD,cAAgB,SAACyB,GACf,IAAOtB,EAAY,EAAKyB,MAAjBzB,SACP,EAAKyB,MAAM2B,eAAe9B,GAC1B,EAAKG,MAAM4B,aAAa/B,EAAYtB,I,uDARtC,WACE,MAAgCsD,KAAK7B,MAA9B3B,EAAP,EAAOA,YAAaE,EAApB,EAAoBA,SACpBsD,KAAK7B,MAAM4B,aAAavD,EAAaE,K,oBASvC,WACE,OAAO,qCACJsD,KAAK7B,MAAMwB,WAAa,cAACM,EAAA,EAAD,IAAgB,KACzC,cAAC,EAAD,CACExD,gBAAiBuD,KAAK7B,MAAM1B,gBAC5BC,SAAUsD,KAAK7B,MAAMzB,SACrBF,YAAawD,KAAK7B,MAAM3B,YACxBD,cAAeyD,KAAKzD,cACpB6B,MAAO4B,KAAK7B,MAAMC,MAClBe,OAAQa,KAAK7B,MAAMgB,OACnBD,SAAUc,KAAK7B,MAAMe,SACrBF,oBAAqBgB,KAAK7B,MAAMa,6B,GAvBXkB,IAAMC,WA4B7BC,EAAkB,SAACf,GACvB,MAAO,CACLjB,MAAOgB,EAASC,GAChB3C,SAAU6C,EAAYF,GACtB5C,gBAAiB+C,EAAmBH,GACpC7C,YAAaiD,EAAeJ,GAC5BM,WAAYD,EAAcL,GAC1BL,oBAAqBY,EAAuBP,KAMjCgB,sBAAiBC,YAAQF,EAAiB,CAACjB,WAAQD,aAAUY,mBAAgBS,4BAAyBR,kBAArFO,CAAqGT,IAErIW,YAASH,IAAiBC,YAAQF,EAAiB,CAACjB,WAAQD,aAAUY,mBAAgBS,4BAAyBnB,aAA/GoB,CAA2HX","file":"static/js/4.463e47ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/leo.a84b81ae.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__y2RB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3nz2U\",\"paginator\":\"Paginator_paginator__gyOkT\",\"pageNumber\":\"Paginator_pageNumber__2ZrSx\"};","import React, { useState } from \"react\";\r\nimport styles from './Paginator.module.css';\r\n\r\nexport const Paginator = ({ onPageChanged, currentPage, totalUsersCount, pageSize, portionSize = 10 }) => {\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  //currentPage === p && styles.selectedPage\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && <button onClick={() => { setPortionNumber(portionNumber - 1) }} >PREV</button>}\r\n      {pages\r\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n        .map(p => {\r\n          return <span onClick={(e) => { onPageChanged(p) }} className={currentPage === p ? styles.pageNumber + \" \" + styles.selectedPage : styles.pageNumber}>{p}</span>\r\n        })}\r\n      {portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport ava from './../../img/leo.png';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Paginator } from \"../Common/Paginator\";\r\nimport {userAPI} from './../../api/api';\r\n\r\n\r\nexport let Users = (props) => {\r\n\r\n  return <div>\r\n    <Paginator onPageChanged={props.onPageChanged} currentPage={props.currentPage} totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}/>\r\n    {props.users.map(u => {\r\n      return (\r\n        <div key={u.id}>\r\n          <span>\r\n            <NavLink to={'/profile/' + u.id}>\r\n              <div>\r\n                <img src={u.photos.small != null ? u.photos.small : ava} className={styles.userPhoto} />\r\n              </div>\r\n            </NavLink>\r\n            <div>\r\n              {u.name}\r\n            </div>\r\n            <div>\r\n              {u.followed ?\r\n                <button disabled={props.followersInProgress.some(id => id === u.id)} onClick={() => {\r\n                  props.unfollow(u.id)\r\n                }}>unfollow</button>\r\n                :\r\n                <button disabled={props.followersInProgress.some(id => id === u.id)} onClick={() => {\r\n                  props.follow(u.id)\r\n                }}>follow</button>\r\n              }\r\n            </div>\r\n          </span>\r\n        </div>)\r\n    })}\r\n  </div>\r\n};\r\n\r\n\r\n/*\r\nexport let Users = (props) => {\r\n  let setUsers = () => {\r\n    if (props.usersState.users.length === 0) {\r\n      axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n      props.setUsers(response.data.items);\r\n      });\r\n    };\r\n  };\r\n  return <div>\r\n    <button onClick={setUsers}>setUsers</button>\r\n    {props.usersState.users.map(u => {\r\n      return (\r\n        <div key={u.id}>\r\n          {u.name}\r\n        </div>)\r\n    })}\r\n  </div>\r\n};\r\n\r\n/* <span>\r\n            <div>\r\n              <img className={styles.userPhoto} />\r\n            </div>\r\n            <div>\r\n              {u.followed ? <button onClick={() => { props.unfollow(u.id) }}>unfollow</button> : <button onClick={() => { props.follow(u.id) }}>follow</button>}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <span>\r\n              <div>\r\n                {u.name}\r\n              </div>\r\n              <div>\r\n                {u.status}\r\n              </div>\r\n            </span>\r\n            <span>\r\n              <div>\r\n              </div>\r\n              <div>\r\n              </div>\r\n            </span>\r\n          </span> */\r\n\r\n\r\n/*\r\naxios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n    props.setUsers(response.data.items);\r\n    });\r\n\r\n    [\r\n      { id: 1, photoURL:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSNgkUANhU439c2rqDbXSLDCivKS4yP52_STw&usqp=CAU', followed: true, name: 'Ivan', lastName: 'Ivanov', status: 'i am student', location: { city: 'Moscow', country: 'Russia' }, },\r\n      { id: 2, photoURL:'https://habrastorage.org/storage2/93b/46f/a39/93b46fa39dd9f2c7a545ffbf571bd10d.jpg', followed: false, name: 'Petr', lastName: 'Petrov', status: 'i am musicant', location: { city: 'Voronezh', country: 'Russia' }, },\r\n      { id: 3, photoURL:'https://cs-site.ru/uploads/posts/2020-09/1599772043_596.jpg', followed: true, name: 'Sidor', lastName: 'Sidorov', status: 'i am blogger', location: { city: 'Riga', country: 'Latvia' }, },\r\n    ]\r\n\r\n\r\n\r\n    */","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowersInProgress = (state) => {\r\n  return state.usersPage.followersInProgress;\r\n}","import * as axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow } from \"../../redux/usersReducer\";\r\nimport { userAPI } from './../../api/api';\r\nimport { Preloader } from './../Common/Preloader';\r\nimport { Users } from \"./Users\";\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowersInProgress}  from './../../redux/users-selectors'\r\n//import preloader from './../../img/preloader.gif';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    const {currentPage, pageSize} = this.props\r\n    this.props.requestUsers(currentPage, pageSize);\r\n  };\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const {pageSize} = this.props\r\n    this.props.setCurrentPage(pageNumber);\r\n    this.props.requestUsers(pageNumber, pageSize);\r\n  };\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <Preloader /> : null}\r\n      <Users\r\n        totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        followersInProgress={this.props.followersInProgress} />\r\n    </>\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followersInProgress: getFollowersInProgress(state),\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default withAuthRedirect(connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers })(UsersContainer));\r\n\r\ncompose (withAuthRedirect,connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers}))(UsersContainer);\r\n\r\n\r\n/*\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    follow: (userId) => {\r\n      dispatch(followAC(userId));\r\n    },\r\n    unfollow: (userId) => {\r\n      dispatch(unfollowAC(userId))\r\n    },\r\n    setUsers: (users) => {\r\n      dispatch(setUsersAC(users))\r\n    },\r\n    setCurrentPage: (pageNumber) => {\r\n      dispatch(setCurrentPageAC(pageNumber))\r\n    },\r\n    setTotalUsersCount: (count) => {\r\n      dispatch(setTotalUsersCountAC(count))\r\n    },\r\n    toggleIsFetching: (isFetching) => {\r\n      dispatch(toggleIsFetchingAC(isFetching))\r\n    },\r\n  }\r\n};\r\n*/\r\n\r\n/*\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followersInProgress: state.usersPage.followersInProgress\r\n  }\r\n};\r\n*/"],"sourceRoot":""}
{"version":3,"sources":["components/utils/objectHelpers.js","redux/usersReducer.js","components/Navbar/Navbar.module.css","api/api.js","components/Dialogs/Dialogs.module.css","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Navbar/FriendsSideBar/FriendsSideBarContainer.jsx","components/Navbar/FriendsSideBar/FriendsSideBar.jsx","components/Navbar/Navbar.jsx","redux/dialogsPageReducer.js","components/Dialogs/MessageFormControl.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Friends/Friends.jsx","components/Login/LoginFormControl.js","redux/appReducer.js","App.js","reportWebVitals.js","redux/sideBarFriendsReducer.js","redux/redux-store.js","index.js","components/FormControl/Style.module.css","components/FormControl/Input.js","components/FormControl/Textarea.js","components/FormControl/TextError.js","components/FormControl/CheckboxGroup.js","components/FormControl/FormControl.js","components/Navbar/FriendsSideBar/FriendsSideBar.module.css","components/Header/Header.module.css","redux/profilePageReducer.js","img/preloader.gif","components/Common/Preloader.jsx","hoc/withAuthRedirect.jsx"],"names":["updateObjectInArray","items","itemID","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followersInProgress","usersReducer","state","action","type","userId","followed","followingInProgress","filter","id","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","dispatch","a","userAPI","getUsers","data","totalCount","followUnfollowFlow","apiMethod","actionCr","resultCode","follow","followUser","bind","unfollow","unfollowUser","module","exports","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getUserProfileStatus","updateUserProfileStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","Header","props","className","s","header","src","loginBlock","isAuth","onClick","to","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","getAuthUserData","setAuthUserData","payload","HeaderContainer","this","React","Component","connect","auth","FriendsSideBarContainer","sideBarFriendsData","sideBarFriends","css","itemFriendsWrapper","friendsData","f","avatarFriends","avatarFriendsImg","name","Navbar","nav","link","activeClassName","activeLink","linkFriendsWrapper","linkFriends","friendsWrapper","ADD_MESSAGE","HANDLE_TEXT_MESSAGE","companionData","messageData","message","newMessageText","MessageFormControl","initialValues","onSubmit","values","onSubmitProps","publishMsgText","resetForm","formik","log","msgContainer","FormControl","control","label","msgSendBtn","Dialogs","CompanionItem","path","dialogsCompanionContainer","dialogsCompanionAvatar","dialogsCompanionAvatarImg","dialogsCompanionItem","dialogsCompanionItemActive","nameCompanion","dialogsElements","dialogsPage","dialog","CompanionMessage","dialogsMsg","messagesElements","dialogsWrapper","dialogsCompanionList","DialogsContainer","compose","text","createActionAddMsg","inputMsgText","messageText","createActionHandleTextMsg","withAuthRedirect","News","Music","Settings","Friends","LoginFormik","yup","required","validate","errors","test","length","setStatus","setSubmitting","disabled","isSubmitting","LoginFormContainer","url","messages","INITIALIZED_SUCCESS","initialized","ProfileContainer","lazy","UsersContainer","App","initializeApp","Suspense","fallback","render","Preloader","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","profilePage","profilePageReducer","messageBody","usersPage","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","Input","CustomInput","useField","field","meta","error","touched","htmlFor","style","inputError","inputDefault","Textarea","CustomTextarea","rest","TextError","children","CheckboxGroup","component","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS_PROFILE","SAVE_PHOTO_SUCCESS","wallData","likesCount","newPost","newPostText","photos","createActionAddPost","setUserProfileStatus","getUserProfile","file","getState","reject","preloader","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.4cafa9a7.chunk.js","sourcesContent":["\r\n\r\nexport const updateObjectInArray = (items, itemID, objPropName, newObjProps) => {\r\n  return items.map((u) => {\r\n    if (u[objPropName] === itemID) {\r\n      return { ...u, ...newObjProps }\r\n    }\r\n    return u;})\r\n}\r\n  \r\n  \r\n  ","import { userAPI } from './../api/api';\r\nimport { updateObjectInArray } from '../components/utils/objectHelpers';\r\n\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followersInProgress: [],\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n      }\r\n    case SET_USERS:\r\n      return { ...state, users: action.users }\r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: action.currentPage }\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return { ...state, totalUsersCount: action.totalUsersCount }\r\n    case TOGGLE_IS_FETCHING:\r\n      return { ...state, isFetching: action.isFetching }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followersInProgress: action.followingInProgress ?\r\n          [...state.followersInProgress, action.userId]\r\n          :\r\n          state.followersInProgress.filter(id => id != action.userId),\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport let followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport let unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport let setUsers = (users) => ({ type: SET_USERS, users });\r\nexport let setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport let setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport let toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport let toggleFollowingProgress = (followingInProgress, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId });\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    const data = await userAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(toggleIsFetching(false));\r\n  }\r\n};\r\n\r\nexport const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCr) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  const response = await apiMethod(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCr(userId));\r\n  };\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\n//const apiMethod = userAPI.followUser(userId).bind(userId)\r\n//const apiMethod = userAPI.unfollowUser(userId).bind(userId)\r\n//const actionCr = followSuccess(userId)\r\n//const actionCr = unfollowSuccess(userId)\r\n\r\nexport const follow = (userId) => {\r\n  return (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, userAPI.followUser.bind(userId), followSuccess);\r\n  }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, userAPI.unfollowUser.bind(userId), unfollowSuccess);\r\n  }\r\n};\r\n\r\n\r\n/* верни в users все ниже для локально стейта если что\r\n{ id: 1, photoURL:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSNgkUANhU439c2rqDbXSLDCivKS4yP52_STw&usqp=CAU', followed: true, firstName: 'Ivan', lastName: 'Ivanov', status: 'i am student', location: { city: 'Moscow', country: 'Russia' }, },\r\n    { id: 2, photoURL:'https://habrastorage.org/storage2/93b/46f/a39/93b46fa39dd9f2c7a545ffbf571bd10d.jpg', followed: false, firstName: 'Petr', lastName: 'Petrov', status: 'i am musicant', location: { city: 'Voronezh', country: 'Russia' }, },\r\n    { id: 3, photoURL:'https://cs-site.ru/uploads/posts/2020-09/1599772043_596.jpg', followed: true, firstName: 'Sidor', lastName: 'Sidorov', status: 'i am blogger', location: { city: 'Riga', country: 'Latvia' }, },\r\n*/","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2FwUM\",\"link\":\"Navbar_link__ru7oe\",\"activeLink\":\"Navbar_activeLink__2PQxP\",\"linkFriends\":\"Navbar_linkFriends__3BfXs\",\"linkFriendsWrapper\":\"Navbar_linkFriendsWrapper__1BE6E\",\"friendsWrapper\":\"Navbar_friendsWrapper__2810g\",\"itemFriendsWrapper\":\"Navbar_itemFriendsWrapper__3fkgF\",\"avatarFriends\":\"Navbar_avatarFriends__10OrM\"};","import * as axios from \"axios\";\r\n// import { follow, unfollow } from './../redux/usersReducer';\r\n\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    \"API-KEY\": '15aee2ab-2811-4194-9d22-fd4b67f44b29',\r\n  },\r\n});\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage, pageSize) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n      return response.data;\r\n    })\r\n  },\r\n  followUser(id) {\r\n    return instance.post(`follow/${id}`)\r\n  },\r\n  unfollowUser(id) {\r\n    return instance.delete(`follow/${id}`)\r\n  },\r\n  getProfile(userId) {\r\n    console.warn('u use an old method , u`d get profileAPI.getProfile')\r\n    return profileAPI.getProfile(userId);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId)\r\n  },\r\n  getUserProfileStatus(userId) {\r\n    return instance.get(`profile/status/` + userId)\r\n  },\r\n  updateUserProfileStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  },\r\n  savePhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n    return instance.put('profile/photo', formData)\r\n  },\r\n  saveProfile(profile) {\r\n    return instance.put(`profile`, profile);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`)\r\n  },\r\n  login(email, password, rememberMe = false, captcha = null) {\r\n    return instance.post('auth/login', { email, password, rememberMe, captcha })\r\n  },\r\n  logout() {\r\n    return instance.delete('auth/login')\r\n  }\r\n};\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl () {\r\n    return instance.get(`security/get-captcha-url`)\r\n  }\r\n}\r\n\r\n/*\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n    return response.data;\r\n  })\r\n};\r\n*/\r\n\r\n\r\n/*\r\nexport const unFollowUser = (id) => {\r\n  return instance.delete(`follow/${id}`).then(response => {\r\n    if (response.data.resultCode === 0) {\r\n      unfollow(id);\r\n    }\r\n  })\r\n};\r\n\r\nexport const followUser = (id) => {\r\n  return instance.post(`follow/${id}`,{},).then(response => {\r\n    if (response.data.resultCode === 0) {\r\n      follow(id);\r\n    }\r\n  })\r\n};\r\n*/\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__38kSC\",\"dialogsCompanionContainer\":\"Dialogs_dialogsCompanionContainer__2z_GF\",\"dialogsCompanionAvatar\":\"Dialogs_dialogsCompanionAvatar__farIw\",\"dialogsCompanionList\":\"Dialogs_dialogsCompanionList__1f6WR\",\"dialogsMessages\":\"Dialogs_dialogsMessages__2rmoE\",\"dialogsCompanionItem\":\"Dialogs_dialogsCompanionItem__1yFTP\",\"dialogsCompanionItemActive\":\"Dialogs_dialogsCompanionItemActive__WbECB\",\"msgContainer\":\"Dialogs_msgContainer__J0DSL\",\"msgText\":\"Dialogs_msgText__1oSpP\",\"msgSendBtn\":\"Dialogs_msgSendBtn__KQ57S\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src='https://pbs.twimg.com/media/CJ1V7QKUAAAD2p3.png'></img>\r\n      <div className={s.loginBlock}>\r\n        {props.isAuth ? <div>{props.login}<button onClick={props.logout}>Logout</button></div>  : <NavLink to={\"/login\"}>Login</NavLink >}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { authAPI, securityAPI } from './../api/api';\r\n\r\nconst SET_USER_DATA = \"samurai/auth/SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    case GET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    // case GET_CAPTCHA_URL_SUCCESS:\r\n    //   return {\r\n    //     ...state,\r\n    //     ...action.payload\r\n    //   }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl }\r\n});\r\n\r\nexport const getCaptchaUrl = () => {\r\n  return async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl();\r\n    dispatch(getCaptchaUrlSuccess(response.data.url))\r\n  }\r\n};\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  };\r\n};\r\n\r\nexport let setAuthUserData = (userId, email, login, isAuth) => {\r\n  return ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha, setStatus, setSubmitting) => {\r\n  return (dispatch) => {\r\n    setSubmitting(true)\r\n    authAPI.login(email, password, rememberMe, captcha).then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n      } else {\r\n        if (response.data.resultCode === 10) {\r\n          dispatch(getCaptchaUrl());\r\n        }\r\n        setStatus(response.data.messages)\r\n      };\r\n      setSubmitting(false);\r\n    });\r\n\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    authAPI.logout().then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false,))\r\n      };\r\n    })\r\n  }\r\n};\r\n\r\n\r\n\r\n/* верни в users все ниже для локально стейта если что\r\n{ id: 1, photoURL:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSNgkUANhU439c2rqDbXSLDCivKS4yP52_STw&usqp=CAU', followed: true, firstName: 'Ivan', lastName: 'Ivanov', status: 'i am student', location: { city: 'Moscow', country: 'Russia' }, },\r\n    { id: 2, photoURL:'https://habrastorage.org/storage2/93b/46f/a39/93b46fa39dd9f2c7a545ffbf571bd10d.jpg', followed: false, firstName: 'Petr', lastName: 'Petrov', status: 'i am musicant', location: { city: 'Voronezh', country: 'Russia' }, },\r\n    { id: 3, photoURL:'https://cs-site.ru/uploads/posts/2020-09/1599772043_596.jpg', followed: true, firstName: 'Sidor', lastName: 'Sidorov', status: 'i am blogger', location: { city: 'Riga', country: 'Latvia' }, },\r\n*/","import * as axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from './../../redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {FriendsSideBarItem} from './FriendsSideBar'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sideBarFriendsData: state.sideBarFriends,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n\r\n  }\r\n};\r\n\r\nexport const FriendsSideBarContainer = connect(mapStateToProps,mapDispatchToProps)(FriendsSideBarItem);","import React from \"react\";\r\nimport css from \"./FriendsSideBar.module.css\";\r\n\r\nexport const FriendsSideBarItem = (props) => {\r\n  return (\r\n    <div className={css.itemFriendsWrapper}>\r\n      {props.sideBarFriendsData.friendsData.map(f => {\r\n        return (\r\n          <div key={f.id} className={css.avatarFriends}>\r\n            <img className={css.avatarFriendsImg}>\r\n            </img>\r\n            {f.name}\r\n          </div>\r\n        )\r\n      })}\r\n\r\n    </div>\r\n  )\r\n} ","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport css from './Navbar.module.css';\r\nimport { FriendsSideBarContainer } from './FriendsSideBar/FriendsSideBarContainer';\r\n\r\nconst Navbar = (props) => {\r\n  \r\n\r\n  // let friendsElements = props.friendsData.friendsData.map(friend => <FriendsSideBarItem name={friend.name} />)\r\n\r\n  return (\r\n    <nav className={css.nav}>\r\n      <div>\r\n        <NavLink to=\"/profile\" className={css.link} activeClassName={css.activeLink\r\n        }>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/users\" className={css.link} activeClassName={css.activeLink\r\n        }>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/dialogs\" className={css.link} activeClassName={css.activeLink\r\n        }>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/news\" className={css.link} activeClassName={css.activeLink\r\n        }>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/music\" className={css.link} activeClassName={css.activeLink\r\n        }>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/settings\" className={css.link} activeClassName={css.activeLink\r\n        }>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n      <div className={css.linkFriendsWrapper}>\r\n        <NavLink to=\"/friends\" className={css.link + ' ' + css.linkFriends} activeClassName={css.activeLink\r\n        }>\r\n          Friends\r\n        </NavLink>\r\n        <div className={css.friendsWrapper}>\r\n          <FriendsSideBarContainer />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","let ADD_MESSAGE = 'samurai/dialogs/ADD_MESSAGE';\r\nlet HANDLE_TEXT_MESSAGE = 'samurai/dialogs/HANDLE_TEXT_MESSAGE';\r\n\r\nlet initialState = {\r\n  companionData: [\r\n    { id: 1, name: 'Petr' },\r\n    { id: 2, name: 'Vasia' },\r\n    { id: 3, name: 'Ivan' },\r\n  ],\r\n  messageData: [\r\n    { id: 1, message: 'Hello' },\r\n    { id: 2, message: 'It is me' },\r\n    { id: 3, message: 'Fine' },\r\n  ],\r\n  newMessageText: '',\r\n};\r\n\r\nexport const dialogsPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      let messageBody = { id: 4, message: action.text };\r\n      state.messageData = [...state.messageData, messageBody];\r\n      return { ...state };\r\n    }\r\n    case HANDLE_TEXT_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        newMessageText: action.messageText\r\n      }\r\n    }\r\n    default: return state;\r\n  };\r\n};\r\nexport const createActionAddMsg = (text) => {\r\n  return {\r\n    type: ADD_MESSAGE,\r\n    text: text,\r\n  }\r\n};\r\n\r\n\r\nexport const createActionHandleTextMsg = (text) => {\r\n  return {\r\n    type: HANDLE_TEXT_MESSAGE,\r\n    messageText: text,\r\n  }\r\n};\r\n","import React from 'react';\r\nimport css from './Dialogs.module.css';\r\nimport { Formik, Form, } from 'formik';\r\nimport { FormControl } from '../FormControl/FormControl';\r\n\r\nexport const MessageFormControl = (props) => {\r\n\r\n  let initialValues = {\r\n    message: '',\r\n  };\r\n\r\n  let onSubmit = (values, onSubmitProps) => {\r\n    props.publishMsgText(values.message);\r\n    onSubmitProps.resetForm();\r\n  };\r\n\r\n  // let publishMsgText = () => {\r\n  //   props.publishMsgText()\r\n  // };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {(formik) => {\r\n        console.log(formik)\r\n        return (<div>\r\n          <Form className={css.msgContainer}>\r\n            <FormControl\r\n              control='textarea'\r\n              type='textarea'\r\n              label='Message'\r\n              name='message' />\r\n            <button type=\"submit\" className={css.msgSendBtn}>\r\n              SendMsg\r\n            </button>\r\n          </Form>\r\n        </div>\r\n        )\r\n      }}\r\n    </Formik>\r\n  )\r\n};","import React from 'react';\r\nimport css from './Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { MessageFormControl } from './MessageFormControl';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  const CompanionItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n      <div className={css.dialogsCompanionContainer}>\r\n        <div className={css.dialogsCompanionAvatar}>\r\n          <img className={css.dialogsCompanionAvatarImg}></img>\r\n        </div>\r\n        <NavLink to={path} className={css.dialogsCompanionItem} activeClassName={css.dialogsCompanionItemActive}>{props.nameCompanion}\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  let companionData = props.dialogsPage.companionData;\r\n\r\n  /*let companionData = [\r\n    { id: 1, name: 'Petr' },\r\n    { id: 2, name: 'Vasia' },\r\n    { id: 3, name: 'Ivan' },\r\n  ] */\r\n\r\n  let dialogsElements = companionData.map(\r\n    (dialog) => {\r\n      return <CompanionItem nameCompanion={dialog.name} id={dialog.id} />\r\n    }\r\n  )\r\n\r\n  let messageData = props.dialogsPage.messageData;\r\n\r\n  /*let messageData = [\r\n    { id: 1, message: 'Hello' },\r\n    { id: 2, message: 'It is me' },\r\n    { id: 3, message: 'Fine' },\r\n  ]*/\r\n\r\n  const CompanionMessage = (props) => {\r\n    return (\r\n      <div className={css.dialogsMsg}>\r\n        {props.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let messagesElements = messageData.map(message => <CompanionMessage message={message.message} />)\r\n\r\n  //тренировка по React.createRef()\r\n\r\n  let newMsgRef = React.createRef();\r\n\r\n  //let showMsgText = newMsgRef.current.value;\r\n\r\n  let inputMsgText = () => {\r\n    props.inputMsgText(newMsgRef.current.value)\r\n  };\r\n\r\n  let publishMsgText = () => {\r\n    props.publishMsgText()\r\n  };\r\n\r\n\r\n  //тренировка по React.createRef() FINISH\r\n\r\n  \r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n  return (\r\n    <div className={css.dialogsWrapper}>\r\n      <div className={css.dialogsCompanionList}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div>\r\n        {messagesElements}\r\n        <MessageFormControl publishMsgText={props.publishMsgText}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { createActionHandleTextMsg, createActionAddMsg } from '../../redux/dialogsPageReducer';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    publishMsgText: (text) => {\r\n      dispatch(createActionAddMsg(text));\r\n    },\r\n    inputMsgText: (text) => {\r\n      dispatch(createActionHandleTextMsg(text));\r\n    },\r\n  }\r\n};\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n//export const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport const DialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs);","import React from 'react';\r\nimport css from './News.module.css';\r\n\r\nconst News = () => {\r\n  return (\r\n    <div >\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News","import React from 'react';\r\nimport css from './Music.module.css';\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div >\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music","import React from 'react';\r\nimport css from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div >\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport css from './Friends.module.css';\r\n\r\n\r\nexport const Friends = () => {\r\n  return (\r\n    <div >\r\n      Friends\r\n    </div>\r\n  )\r\n};","import React from \"react\";\r\nimport { Formik, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { FormControl } from '../FormControl/FormControl';\r\nimport { login } from './../../redux/authReducer';\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nlet LoginFormik = (props) => {\r\n\r\n  let initialValues = {\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false,\r\n    captcha: null,\r\n  };\r\n\r\n  //validationSchema не удаляй, это другой вариант валидации, сейчас использую validate\r\n  let validationSchema = yup.object({\r\n    email: yup.string().email('invalid email format').required('required'),\r\n    password: yup.string().required('required')\r\n  });\r\n\r\n  let validate = (values) => {\r\n    let errors = {};\r\n    if (!values.email) { errors.email = 'required' }\r\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) { errors.email = 'invalid form' };\r\n    if (!values.password) { errors.password = 'required' }\r\n    else if (values.password.length <= 1) { errors.password = 'more than 1 symbol' };\r\n    //if (!values.captcha) { errors.captcha = 'required' };\r\n    return errors;\r\n  };\r\n\r\n  let onSubmit = (values, onSubmitProps) => {\r\n    console.log('onSubmitProps', onSubmitProps);\r\n    console.log('values', values)\r\n    props.login(values.email, values.password, values.rememberMe, values.captcha, onSubmitProps.setStatus, onSubmitProps.setSubmitting);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      //validationSchema={validationSchema}\r\n      validate={validate}\r\n      onSubmit={onSubmit}>\r\n      {(formik) => {\r\n        console.log('formik', formik)\r\n        return (\r\n          <div>\r\n            <Form >\r\n              <div>\r\n                <FormControl\r\n                  control='input'\r\n                  type='email'\r\n                  label='Email'\r\n                  name='email' />\r\n                <FormControl\r\n                  control='input'\r\n                  type='password'\r\n                  label='Password'\r\n                  name='password'\r\n                />\r\n                <FormControl\r\n                  control='checkbox'\r\n                  type='checkbox'\r\n                  label='Remember me'\r\n                  name='rememberMe'\r\n                />\r\n                {props.captchaUrl && <img src={props.captchaUrl} />}\r\n                {props.captchaUrl && <FormControl\r\n                  control='input'\r\n                  type='text'\r\n                  label='captcha'\r\n                  name='captcha'\r\n                />}\r\n              </div>\r\n              <button type=\"submit\" disabled={formik.isSubmitting}>Login</button>\r\n              {formik.status && <div>{formik.status}</div>}\r\n            </Form>\r\n          </div>)\r\n      }}\r\n    </Formik>)\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n  console.log('LoginFormprops', props)\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <LoginFormik login={props.login} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n})\r\n\r\nexport const LoginFormContainer = connect(mapStateToProps, { login })(LoginForm)\r\n\r\n","import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'samurai/app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  //dispatch(somethingelse());Promise.all([promise]) это для того, чтобы объединить неколько промисов promise2, promise3\r\n  //dispatch(somethingelse()); \r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n}\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { Component } from 'react';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\n//import ProfileContainer from './components/Profile/User/ProfileContainer';\r\nimport { DialogsContainer } from './components/Dialogs/DialogsContainer';\r\nimport { Route } from 'react-router-dom';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport { Friends } from './components/Friends/Friends';\r\n//import UsersContainer from './components/Users/UsersContainer';\r\nimport { LoginFormContainer } from './components/Login/LoginFormControl';\r\nimport { connect } from \"react-redux\";\r\nimport { initializeApp } from './redux/appReducer';\r\nimport { Preloader } from './components/Common/Preloader';\r\n\r\nconst ProfileContainer = React.lazy(() => {\r\n  return (\r\n    import('./components/Profile/User/ProfileContainer')\r\n  )\r\n});\r\n\r\nconst UsersContainer = React.lazy(() => {\r\n  return (\r\n    import('./components/Users/UsersContainer')\r\n  )\r\n});\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      //раньше контейнерная дивка className='app-wrapper' была обернута BrowserRouter, я перенес ее в индекс, то есть апп сейчас в индексе обернута барузерроутером, зачем ? поиграться, там в комментах к уроку #80 писали о проблемах, если использовать withRouter \r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar /*friendsData={props.state.sideBarFriends}*/ />\r\n        <div className='app-wrapper-container'>\r\n          <React.Suspense fallback={<h1>Loading...</h1>} >\r\n            <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\r\n            <Route path='/users' render={() => <UsersContainer />} />\r\n          </React.Suspense >\r\n          <Route path='/dialogs' render={() => <DialogsContainer />} />\r\n          <Route path='/news' render={() => <News />} />\r\n          <Route path='/music' render={() => <Music />} />\r\n          <Route path='/settings' render={() => <Settings />} />\r\n          <Route path='/friends' render={() => <Friends />} />\r\n          <Route path='/login' render={() => <LoginFormContainer />} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default connect(mapStateToProps, { initializeApp })(App);\r\n\r\n// export default compose(withRouter, connect(mapStateToProps, { initializeApp }))(App);\r\n\r\n// я не знаю как использовать с withRouter или без, если навигация слетит, то наверно с withRouter, сейчас оба варианта работают, при этом withRouter может лежать только внутри BrowserRouter, поэтому, я эту обретку вынес в индексджиэс","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let initialState = {\r\n  friendsData: [\r\n    { id: 1, name: 'Ivan' },\r\n    { id: 2, name: 'Alex' },\r\n    { id: 3, name: 'Nastia' },\r\n  ],\r\n};\r\n\r\nexport const sideBarFriendsReducer = (state= initialState, action) => {\r\n\r\n  return state;\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { profilePageReducer } from './profilePageReducer';\r\nimport { dialogsPageReducer } from './dialogsPageReducer';\r\nimport { sideBarFriendsReducer } from './sideBarFriendsReducer';\r\nimport { usersReducer } from './usersReducer';\r\nimport { authReducer } from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { appReducer } from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profilePageReducer,\r\n  dialogsPage: dialogsPageReducer,\r\n  sideBarFriends: sideBarFriendsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n});\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from './redux/redux-store'\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\n/*\r\nlet companionData = [\r\n  { id: 1, name: 'Petr' },\r\n  { id: 2, name: 'Vasia' },\r\n  { id: 3, name: 'Ivan' },\r\n];\r\n\r\nlet messageData = [\r\n  { id: 1, message: 'Hello' },\r\n  { id: 2, message: 'It is me' },\r\n  { id: 3, message: 'Fine' },\r\n];\r\n\r\nlet wallData = [\r\n  { id: 1, message: 'Hi how are you ?', likesCount: 12 },\r\n  { id: 2, message: 'What are you doing ?', likesCount: 7 },\r\n  { id: 3, message: 'All is good', likesCount: 5 },\r\n]\r\n*/\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store} >\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputError\":\"Style_inputError__3KhQW\",\"inputDefault\":\"Style_inputDefault__hzdbP\",\"error\":\"Style_error__tQSU0\"};","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\r\nimport style from './Style.module.css'\r\n\r\nexport let Input = (props) => {\r\n  return (\r\n    <div>\r\n      <CustomInput {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CustomInput = (props) => {\r\n  const [field, meta] = useField(props.name);\r\n  const error = meta.touched && meta.error;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label htmlFor={props.name}>{props.label}</label>\r\n      </div>\r\n      <div>\r\n        <input id={props.name} className={error && style.inputError || style.inputDefault} {...field} {...props} />\r\n      </div>\r\n      {error ? <div className={error && style.error}>{meta.error}</div> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react'\r\nimport { useField } from 'formik'\r\nimport style from './Style.module.css'\r\n\r\nexport let Textarea = (props) => {\r\n  return (\r\n    <div>\r\n      <CustomTextarea {...props} />\r\n    </div>\r\n  )\r\n};\r\n\r\nconst CustomTextarea = (props) => {\r\n  const [field, meta, { ...rest }] = useField(props.name);\r\n  const error = meta.touched && meta.error;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label htmlFor={props.label}>{props.label}</label>\r\n      </div>\r\n      <div>\r\n        <textarea {...field} {...meta} {...rest} className={error && style.inputError || style.inputDefault} />\r\n      </div>\r\n      {error ? <div className={style.error}>{meta.error}</div> : null}\r\n    </div>\r\n  );\r\n};","import React from 'react'\r\nimport style from './Style.module.css'\r\n\r\nfunction TextError (props) {\r\n  console.log('textError', props)\r\n  return <div className={style.error}>{props.children}</div>\r\n}\r\n\r\nexport default TextError","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nexport let CheckboxGroup = (props) => {\r\n  const { label, name, ...rest } = props\r\n  return (\r\n    <div className='form-control'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field id={name} name={name} {...rest} />\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  )\r\n};\r\n","import React from 'react'\r\nimport {Input} from './Input'\r\nimport {Textarea} from './Textarea'\r\nimport {CheckboxGroup} from './CheckboxGroup'\r\n\r\nexport let FormControl = (props) => {\r\n  const { control, ...rest } = props\r\n  switch (control) {\r\n    case 'input':\r\n      return <Input {...rest} />\r\n    case 'textarea':\r\n      return <Textarea {...rest} />\r\n    // case 'select':\r\n    //   return <Select {...rest} />\r\n    // case 'radio':\r\n    //   return <RadioButtons {...rest} />\r\n    case 'checkbox':\r\n      return <CheckboxGroup {...rest} />\r\n    // case 'date':\r\n    //   return <DatePicker {...rest} />\r\n    // case 'chakraInput':\r\n    //   return <ChakraInput {...rest} />\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemFriendsWrapper\":\"FriendsSideBar_itemFriendsWrapper__i1TOI\",\"avatarFriends\":\"FriendsSideBar_avatarFriends__M7B0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__105L6\",\"loginBlock\":\"Header_loginBlock__3VKy4\"};","import { userAPI, profileAPI } from './../api/api';\r\n\r\nlet ADD_POST = \"samurai/profile/ADD_POST\";\r\nlet SET_USER_PROFILE = \"samurai/profile/SET_USER_PROFILE\";\r\nlet SET_USER_STATUS_PROFILE = \"samurai/profile/SET_USER_STATUS_PROFILE\";\r\nlet SAVE_PHOTO_SUCCESS = \"samurai/profile/SAVE_PHOTO_SUCCESS\";\r\n\r\nlet initialState = {\r\n  wallData: [\r\n    { id: 1, message: 'Hi how are you ?', likesCount: 12 },\r\n    { id: 2, message: 'What are you doing ?', likesCount: 7 },\r\n    { id: 3, message: 'All is good', likesCount: 5 },\r\n  ],\r\n  profile: null,\r\n  status: '',\r\n};\r\n\r\nexport const profilePageReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = { id: 4, message: action.newPostText, likesCount: 99 };\r\n      state.wallData = [...state.wallData, newPost];\r\n      return { ...state };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return { ...state, profile: action.profile, }\r\n    }\r\n    case SET_USER_STATUS_PROFILE: {\r\n      return { ...state, status: action.status, }\r\n    }\r\n    case SAVE_PHOTO_SUCCESS: {\r\n      return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n    }\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport const createActionAddPost = (newPostText) => {\r\n  return {\r\n    type: ADD_POST,\r\n    newPostText: newPostText,\r\n  }\r\n};\r\n\r\nexport const setUserProfile = (profile) => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    profile: profile,\r\n  }\r\n};\r\n\r\nexport const savePhotoAC = (photos) => {\r\n  return {\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photos: photos,\r\n  }\r\n}\r\n\r\nexport const setUserProfileStatus = (status) => {\r\n  return {\r\n    type: SET_USER_STATUS_PROFILE,\r\n    status: status,\r\n  }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const response = await userAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data))\r\n};\r\n\r\nexport const getUserProfileStatus = (userId) => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.getUserProfileStatus(userId);\r\n    dispatch(setUserProfileStatus(response.data));\r\n  }\r\n};\r\n\r\nexport const updateUserProfileStatus = (status) => async (dispatch) => {\r\n  const response = await profileAPI.updateUserProfileStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setUserProfileStatus(status))\r\n  };\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  const response = await profileAPI.savePhoto(file);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoAC(response.data.data.photos))\r\n  };\r\n};\r\n\r\nexport const saveProfile = (profile, setStatus, setSubmitting) => async (dispatch, getState) => {\r\n  setSubmitting(true);\r\n  const userId = getState().auth.userId;\r\n  const response = await profileAPI.saveProfile(profile);\r\n  setSubmitting(false);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId));\r\n  } else {\r\n    setStatus(response.data.messages);\r\n    return Promise.reject();\r\n  };\r\n};\r\n\r\n//export const saveProfile = (profile) => {profileAPI.saveProfile(profile)};\r\n\r\n// export const saveProfile = (profile) => {\r\n//   return (dispatch) => {\r\n//     authAPI.saveProfile(profile).then(response => {\r\n//       if (response.data.resultCode === 0) {\r\n//         dispatch(getAuthUserData())\r\n//       } else { setStatus(response.data.messages) };\r\n//       setSubmitting(false);\r\n//     });\r\n\r\n//   }\r\n// };\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.b927a61b.gif\";","import React from \"react\";\r\nimport preloader from './../../img/preloader.gif';\r\n\r\nexport let Preloader = () => {\r\n  return (\r\n    <div>\r\n      <img src={preloader}/>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n// import React from 'react';\r\n// import preloader from \"/../../img/preloader.gif\";\r\n\r\n// let Preloader = (props) => {\r\n//     return <div  style={ { backgroundColor: 'white' } }>\r\n//         <img src={preloader} />\r\n//     </div>\r\n// }\r\n\r\n// export default Preloader;","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n      return <Component {...this.props} />\r\n    }\r\n  };\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n};"],"sourceRoot":""}